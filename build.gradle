buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'prac'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
	runtime('mysql:mysql-connector-java')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')

	//log4jdbc-log4j2 を使用してSQLを出力する
	compile("org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16")
	//logback.xml で if condition 文を使用できるようにするために
	//Janino libraryをインストール
	compile("org.codehaus.janino:janino:2.7.5")

	//Apache Commons Lang の StringUtils を使用
	compile("org.apache.commons:commons-lang3:3.3.2")
}

bootRun {
//    jvmArgs = ['-Dspring.profiles.active=product']
    jvmArgs = ['-Dspring.profiles.active=develop']
}

test {
//    jvmArgs = ['-Dspring.profiles.active=product']
    jvmArgs = ['-Dspring.profiles.active=develop']
}
